Para gerar o signal_tx:
$ gcc -c signal_tx.c -o signal_tx.o
$ gcc signal_tx.o -o signal_tx

Para testar o signal_tx, comece digitando:
$ sleep 1000
Com isso, um processo que dura 1000 segundos será executado.

Para verificar o pid do processo, em outro terminal, digite:
$ ps aux | grep -i sleep
Encontre a linha com "sleep 1000". A segunda coluna é o pid do processo.

Para executar o signal_tx, digite:
$ ./signal_tx <pid> 15

O sinal 15 é chamado de SIGTERM, e mata o processo. Execute novamente:
$ ps aux | grep -i sleep

O processo terá sido terminado.

-------------------------------------------------------------------

Para gerar o signal_rx:
$ gcc -c signal_rx.c -o signal_rx.o
$ gcc signal_rx.o -o signal_rx

Para testar o signal_rx no modo busy wait, digite:
$ ./signal_rx busy
O processo irá imprimir na tela seu próprio pid.

Digite Ctrl+c no mesmo terminal para enviar um sigint.

Para enviar um SIGUSR1, em outro terminal, digite:
$ kill -n 10 <pid>

Para enviar um SIGTERM, digite:
$ kill <pid>
O signal_rx no outro terminal deve encerrar. 

Para testar o signal_rx no modo blocking wait, digite:
$ ./signal_rx blocking
Repita os mesmos procedimentos.
